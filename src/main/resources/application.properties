server.port=8082

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#Database Configuration
#local configuration
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/orcl.docker.internal
#DockerConfig
#spring.datasource.url=jdbc:oracle:thin:@oracle-db:1521:xe
spring.datasource.username=scott
spring.datasource.password=tiger
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
#Any change in ddl will be updated
spring.jpa.hibernate.ddl-auto=update
#Show the sql in console
spring.jpa.show-sql=true
spring.application.name=student-service



#docker build -t mahen036/student-svc .
#docker run -d --name student-container --network student-network -p 8082:8082 mahen036/student-svc

#docker network create student-network
#docker network ls

#docker run -d --name oracle-db --network student-network -p 1521:1521 <oracle-image-name>


#Step1: get oracle 11g image from docker hub using docker pull command.
#Step2: run the image using docker run command on port 1521 and in a 
#       user defined network
#Step3: create Dockerfile for your application
#Step4: update application.properties with dialect, correct parameters 
#Step5: build your project using maven
#Step6: open cmd and build docker image for your application.
#Step7: run docker image on the same network where oracle is running     
